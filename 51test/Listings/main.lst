C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2023 17:01:40 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(D:\Keil_v5\C51\Library;D:\K
                    -eilC51\library) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //#include  <STC15Fxxxx.H>
   2          #include  <config.h>
   3          #include  <delay.h>
   4          
   5          #include  "oled.h"
   6          #include  "JY901.h"
   7          #include  "AngelADC.h"
   8          #include  "Global.h"
   9          #include  "Cylinder.h"
  10          
  11          unsigned char loop1,loop2,loop3;
  12          unsigned char timeloop=0;
  13          unsigned char num=0;
  14          unsigned char g=0;
  15          unsigned char rcv=0;
  16          
  17          #define S4RI  0x01              //S4CON.0
  18          #define S4TI  0x02              //S4CON.1
  19          #define S4RB8 0x04              //S4CON.2
  20          #define S4TB8 0x08              //S4CON.3
  21          
  22          unsigned char uart_receive_number_old=0;
  23          unsigned char code Buffer[] = "uart send";  //ËùÒª·¢ËÍµÄÊý¾Ý
  24          unsigned char *p;
  25          unsigned char uart_receive_buffer[30];  //´Ó´®¿Ú½ÓÊÕµÄÊý¾Ý
  26          unsigned char uart_receive_number=0;    //Ö¸Ê¾´®¿Ú½ÓÊÕ¸öÊý
  27          static unsigned char i_com = 7;  //¶¨ÒåÎª¾²Ì¬±äÁ¿£¬i µÄÖµ²»»á·¢Éú¸Ä±ä
  28          
  29          float AngleRoll = 0;
  30          float AnglePitch = 0;
  31          float deltang0,deltang1;
  32          
  33          void SetGoal(void);
  34          float IK_AngK(float x,float y);
  35          float IK_AngH(float x, float y);
  36          void Balance(void);
  37          
  38          void oledShow(void);
  39          void HC08_Init(void);
  40          
  41          
  42          void main()
  43          { 
  44   1        P0M1 = 0x00;  P0M0 = 0x00;  //×¼Ë«Ïò¿Ú
  45   1        P1M0 = 0x00;  P1M1 = 0x00; 
  46   1        P3M1 = 0x00;  P3M0 = 0x00;    
  47   1        P2M0 = 0xff;  P2M1 = 0x00; //ÍÆÍìÊä³ö
  48   1        P4M0 = 0xff;  P4M1 = 0x00;
  49   1        P2=0; P4=0;
  50   1        
  51   1        OLED_Init();
  52   1        OLED_Clear();
  53   1        OLED_ShowString(0,0,"init",16);
  54   1        
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2023 17:01:40 PAGE 2   

  55   1        
  56   1        TR0 = 0;//Í£Ö¹¼ÆÊý
  57   1        
  58   1      //  TMOD |= 0;  //¹¤×÷Ä£Ê½, 0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3: 16Î»×Ô¶¯ÖØ×°, ²»¿ÉÆÁ±ÎÖÐ¶
             -Ï
  59   1      //  TMOD &= ~0x04;  //¶¨Ê±
  60   1      //  AUXR |=  0x80;  //1T mode
  61   1      //  TH0 = (u8)((65536UL - (MAIN_Fosc / 500)) / 256);//500hzÖÐ¶ÏÆµÂÊ
  62   1      //  TL0 = (u8)((65536UL - (MAIN_Fosc / 500)) % 256);
  63   1        
  64   1        //¶¨Ê±Æ÷0ÓÃÓÚÖ÷³ÌÐò
  65   1        AUXR &= 0x7F;     //¶¨Ê±Æ÷Ê±ÖÓ12TÄ£Ê½
  66   1        TMOD &= 0xF0;     //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
  67   1        TL0 = 0xDC;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
  68   1        TH0 = 0x0B;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
  69   1        TF0 = 0;        //Çå³ýTF0±êÖ¾
  70   1        TR0 = 1;        //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
  71   1      
  72   1        INT_CLKO &= ~0x01;//²»Êä³öÊ±ÖÓ
  73   1        ET0 = 1; //¿ª¶¨Ê±Æ÷0·Ö¿ª¹Ø
  74   1        
  75   1        p = Buffer;
  76   1        
  77   1        Angle_Init();
  78   1        Cy_Init();
  79   1        
  80   1        
  81   1        setUART1();//JY61P£¬Ê¹ÓÃ´®¿Ú1_2 & ¶¨Ê±Æ÷1
  82   1        HC08_Init();//HC08À¶ÑÀ£¬Ê¹ÓÃ´®¿Ú4 & ¶¨Ê±Æ÷4
  83   1        Cy_Timer_Init();//¶¨Ê±Æ÷2ÓÃÓÚÆø¸×¿ØÖÆ
  84   1        loop1=0;
  85   1        loop2=0;
  86   1        loop3=0;
  87   1        delay_ms(100);
  88   1        
  89   1        OLED_Clear();
  90   1        PS = 1;//´®ÐÐ¿ÚÖÐ¶ÏÓÅÏÈ
  91   1        ES = 1;//Ê¹ÄÜ´®¿ÚÖÐ¶Ï
  92   1        EA = 1;//´ò¿ª×ÜÖÐ¶Ï
  93   1        
  94   1        while(1)
  95   1        {
  96   2      
  97   2        }
  98   1      }
  99          
 100          void mainloop() interrupt 1
 101          {//25ms¶¨Ê±ÖÐ¶Ï
 102   1        loop1++;loop2++;loop3++;
 103   1        if(loop1>=2)//50ms
 104   1        {
 105   2          Anglefilt();
 106   2          oledShow();
 107   2          loop1=0;
 108   2        }
 109   1        if(loop2>=6)//150ms
 110   1        {
 111   2          P55 = ~P55;
 112   2          CyCtrl();
 113   2          AngleRoll = (float)stcAngle.Angle[0]/32768*180;//ºá¹ö½Ç
 114   2          AnglePitch = (float)stcAngle.Angle[1]/32768*180;//¸©Ñö½Ç
 115   2          loop2=0;
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2023 17:01:40 PAGE 3   

 116   2        }
 117   1        if(loop3>=40)//1s
 118   1        {
 119   2          loop3=0;
 120   2          SetGoal();
 121   2        }
 122   1      }
 123          
 124          void Cy_PushTimer() interrupt 12
 125          {
 126   1        Cy_Push();
 127   1      }
 128          
 129          void Uart1_JY901() interrupt 4
 130          {//JY901´®¿Ú½ÓÊÕÖÐ¶Ï
 131   1        if (RI)
 132   1        {
 133   2          RI=0;
 134   2          CopeSerialData(SBUF);     
 135   2        }
 136   1      }
 137          
 138          void Uart4_HC08(void) interrupt 18
 139          {
 140   1        rcv++;
 141   1        if(S4CON & S4RI)
 142   1        {  //µ±Ó²¼þ½ÓÊÕµ½Ò»¸öÊý¾ÝÊ±£¬RI»áÖÃÎ»
 143   2          S4CON &= ~S4RI;         //Çå³ýS4RIÎ»
 144   2          uart_receive_buffer[uart_receive_number] = S4BUF;
 145   2          uart_receive_number++;
 146   2        }
 147   1      }
 148          
 149          void oledShow(void)
 150          {
 151   1        if(ang_kf[0]>ang_adc[0])
 152   1        {deltang0 = ang_kf[0] - ang_adc[0];}
 153   1        else
 154   1        {deltang0 = ang_adc[0] - ang_kf[0];}
 155   1        if(ang_kf[1]>ang_adc[1])
 156   1        {deltang1 = ang_kf[1] - ang_adc[1];}
 157   1        else
 158   1        {deltang1 = ang_adc[1] - ang_kf[1];}
 159   1        
 160   1        OLED_numf(20,0,AngleRoll,3,16);
 161   1        OLED_numf(60,0,AnglePitch,3,16);
 162   1        
 163   1        OLED_numf(0,2,ang_kf[0],3,12);
 164   1        OLED_numf(50,2,ang_kf[1],3,12);
 165   1        OLED_numf(0,3,ang_kf[2],3,12);
 166   1        OLED_numf(50,3,ang_kf[3],3,12);
 167   1        
 168   1        OLED_numf(0,4,ang_goal[0],3,12);
 169   1        OLED_numf(50,4,ang_goal[1],3,12);
 170   1        
 171   1        OLED_num(0,5,rcv,3,12);
 172   1      }
 173          
 174          void HC08_Init(void) 
 175          {
 176   1        S4CON = 0x10;   //8Î»Êý¾Ý,¿É±ä²¨ÌØÂÊ
 177   1        S4CON |= 0x40;    //´®¿Ú4Ñ¡Ôñ¶¨Ê±Æ÷4Îª²¨ÌØÂÊ·¢ÉúÆ÷
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2023 17:01:40 PAGE 4   

 178   1        T4T3M |= 0x20;    //¶¨Ê±Æ÷Ê±ÖÓ1TÄ£Ê½
 179   1        T4L = 0xF3;     //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 180   1        T4H = 0xFC;     //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 181   1        T4T3M |= 0x80;    //¶¨Ê±Æ÷4¿ªÊ¼¼ÆÊ±
 182   1        IE2 = 0x10;       //Ê¹ÄÜ´®¿Ú4ÖÐ¶Ï
 183   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1035    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =    220    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
