C51 COMPILER V9.57.0.0   MAIN                                                              03/20/2023 19:40:13 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KeilC51\KeilC51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(D:\KeilC51\library) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include  "oled.h"
*** WARNING C322 IN LINE 530 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 532 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 534 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 536 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 538 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 540 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
*** WARNING C322 IN LINE 542 OF D:\KeilC51\library\STC15Fxxxx.H: unknown identifier
   2          #include  "config.h"
   3          #include  "adc.h"
   4          #include  "delay.h"
   5          #include  "soft_uart.h"
   6          //#include  "USART.h"
   7          #include  "STC15Fxxxx.H"
   8          
   9          //sbit Pin0 = P0^0;
  10          //sbit Pin1 = P0^1;
  11          //sbit Pin2 = P0^2;
  12          
  13          
  14          unsigned char num;
  15          unsigned char ang;
  16          
  17          void  ADC_config(void);
  18          float Anglefilt();
  19          void  UART_config(void);
  20          
  21          void main()
  22          { 
  23   1        ADC_config();
  24   1        //Pin1 = 0;
  25   1        //Pin2 = 0;
  26   1        num = 0;
  27   1        EA = 1; //¿ª×ÜÖÐ¶Ï
  28   1        ET0 = 1; //¿ª¶¨Ê±Æ÷0·Ö¿ª¹Ø
  29   1        TMOD = 0x01;
  30   1        TH0 = (65535-10000)/256; //10ms
  31   1        TL0 = (65535-10000)%256;
  32   1        OLED_Init();      //³õÊ¼»¯OLED  
  33   1        Delay_1ms(2000);
  34   1        OLED_Clear();
  35   1        while(1) 
  36   1        {   
  37   2          ang = Get_ADC10bitResult(0);
  38   2          
  39   2          //ang = Anglefilt();
  40   2          //ang = ang/2.86;
  41   2          OLED_numf(10,10,ang,5,16);
  42   2          
  43   2          /*TxSend(ang/1000 + '0'); //´®¿Ú·¢ËÍ½Ç¶ÈÊý¾Ý
  44   2          TxSend(ang%1000/100 + '0');
  45   2          TxSend(ang%100/10 + '0');
  46   2          TxSend(ang%10 + '0');
  47   2          TxSend(' ');
C51 COMPILER V9.57.0.0   MAIN                                                              03/20/2023 19:40:13 PAGE 2   

  48   2          TxSend(' ');*/
  49   2          //TxSend(ang%10 + '0');
  50   2          //TxSend(ang%10 + '0');
  51   2          PrintString("\r\n");
  52   2          //TxSend('5');
  53   2          //PrintString("5");
  54   2          //PrintString("AndTest");
  55   2          //PrintString("\n");
  56   2          Delay_50ms(50);
  57   2        //}   
  58   2        }
  59   1      }
  60          
  61          /*
  62          float Anglefilt()//´øÂË²¨µÄ½Ç¶ÈADC¶ÁÈ¡
  63          {
  64            float t;
  65            char i,j;
  66            int temp,sum;
  67            unsigned char filtime=15;
  68            int buf[15];
  69            temp=0;
  70            sum=0;
  71            for(i=0;i<filtime;i++)
  72            {
  73              buf[i] = Get_ADC10bitResult(0);
  74              Delay_1ms(1);
  75            }
  76            for(j=0;j<filtime-1;j++)
  77            {
  78              for(i=0;i<filtime-1;i++)
  79              {
  80                if(buf[i]>buf[i+1])
  81                {
  82                  temp=buf[i];
  83                  buf[i]=buf[i+1];
  84                  buf[i+1]=temp;
  85                }
  86              }
  87            }
  88            for(i=2;i<filtime-2;i++)
  89            {sum = sum+ buf[i];}
  90            t = sum/(filtime-4.0);
  91            return t;
  92          }
  93            
  94            
  95            /*while(1)
  96            {
  97              if(Pin2 == 1)
  98              {
  99                if(num == 0)
 100                {TR0 = 1; Pin1 = 1;}
 101                else
 102                {TR0 = 0; Pin1 = 0;}
 103              }
 104              else
 105              {
 106                TR0 = 0;
 107                Pin1 = 0;
 108                num = 0;
 109              }
C51 COMPILER V9.57.0.0   MAIN                                                              03/20/2023 19:40:13 PAGE 3   

 110            }
 111          }*/
 112          
 113          void dly10ms() interrupt 0
 114          {
 115   1        TH0 = (65535-10000)/256; //10ms
 116   1        TL0 = (65535-10000)%256;
 117   1        num++;
 118   1      }
 119          
 120          void  ADC_config(void)
 121          {
 122   1        ADC_InitTypeDef   ADC_InitStructure;        //½á¹¹¶¨Òå
 123   1        ADC_InitStructure.ADC_Px        = ADC_P10 | ADC_P11 | ADC_P12;  //ÉèÖÃÒª×öADCµÄIO,  ADC_P10 ~ ADC_P17(»ò²Ù×
             -÷),ADC_P1_All
 124   1        ADC_InitStructure.ADC_Speed     = ADC_360T;     //ADCËÙ¶È     ADC_90T,ADC_180T,ADC_360T,ADC_540T
 125   1        ADC_InitStructure.ADC_Power     = ENABLE;     //ADC¹¦ÂÊÔÊÐí/¹Ø±Õ  ENABLE,DISABLE
 126   1        ADC_InitStructure.ADC_AdjResult = ADC_RES_H8L2;   //ADC½á¹ûµ÷Õû,  ADC_RES_H2L8,ADC_RES_H8L2
 127   1        ADC_InitStructure.ADC_Polity    = PolityLow;    //ÓÅÏÈ¼¶ÉèÖÃ  PolityHigh,PolityLow
 128   1        ADC_InitStructure.ADC_Interrupt = DISABLE;      //ÖÐ¶ÏÔÊÐí    ENABLE,DISABLE
 129   1        ADC_Inilize(&ADC_InitStructure);          //³õÊ¼»¯
 130   1        ADC_PowerControl(ENABLE);             //µ¥¶ÀµÄADCµçÔ´²Ù×÷º¯Êý, ENABLE»òDISABLE
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    120    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
